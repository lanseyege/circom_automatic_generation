pragma circom 2.0.0;

template Multiplier () {
signal input c; 
signal input b; 
signal output out_0; 
out_0 <== c * b;
signal input out_0; 
signal input a1; 
signal output out_1; 
out_1 <== out_0 + a1;
signal input b; 
signal input d; 
signal output out_0; 
out_0 <== b * d;
signal input e; 
signal input out_0; 
signal output out_1; 
out_1 <== e - out_0;
signal input f; 
signal input e; 
signal output out_0; 
out_0 <== f / e;
signal input out_0; 
signal input c; 
signal output out_1; 
out_1 <== out_0 + c;
signal input 5; 
signal input 4; 
signal output out_0; 
out_0 <== 5 * 4;
signal input out_0; 
signal input 3; 
signal output out_1; 
out_1 <== out_0 + 3;
signal input 6; 
signal input out_1; 
signal output out_2; 
out_2 <== 6 * out_1;
signal input 2; 
signal input out_2; 
signal output out_3; 
out_3 <== 2 + out_2;
signal input 7; 
signal input out_3; 
signal output out_4; 
out_4 <== 7 * out_3;
signal input 3; 
signal input out_4; 
signal output out_5; 
out_5 <== 3 + out_4;
signal input 8; 
signal input out_5; 
signal output out_6; 
out_6 <== 8 * out_5;
signal input 9; 
signal input out_6; 
signal output out_7; 
out_7 <== 9 + out_6;
signal input 7; 
signal input 6; 
signal output out_0; 
out_0 <== 7 * 6;
signal input out_0; 
signal input 5; 
signal output out_1; 
out_1 <== out_0 + 5;
signal input out_1; 
signal input 4; 
signal output out_2; 
out_2 <== out_1 * 4;
signal input out_2; 
signal input 3; 
signal output out_3; 
out_3 <== out_2 + 3;
signal input out_3; 
signal input 2; 
signal output out_4; 
out_4 <== out_3 * 2;
signal input out_4; 
signal input 1; 
signal output out_5; 
out_5 <== out_4 + 1;
signal input 7; 
signal input 6; 
signal output out_0; 
out_0 <== 7 * 6;
signal input out_0; 
signal input 5; 
signal output out_1; 
out_1 <== out_0 + 5;
signal input out_1; 
signal input 4; 
signal output out_2; 
out_2 <== out_1 * 4;
signal input out_2; 
signal input 3; 
signal output out_3; 
out_3 <== out_2 + 3;
signal input out_3; 
signal input 2; 
signal output out_4; 
out_4 <== out_3 * 2;
signal input out_4; 
signal input 1; 
signal output out_5; 
out_5 <== out_4 + 1;
signal input 5; 
signal input 4; 
signal output out_0; 
out_0 <== 5 * 4;
signal input out_0; 
signal input 3; 
signal output out_1; 
out_1 <== out_0 + 3;
signal input 6; 
signal input out_1; 
signal output out_2; 
out_2 <== 6 * out_1;
signal input 2; 
signal input out_2; 
signal output out_3; 
out_3 <== 2 + out_2;
signal input 7; 
signal input out_3; 
signal output out_4; 
out_4 <== 7 * out_3;
signal input 3; 
signal input out_4; 
signal output out_5; 
out_5 <== 3 + out_4;
signal input 8; 
signal input out_5; 
signal output out_6; 
out_6 <== 8 * out_5;
signal input 9; 
signal input out_6; 
signal output out_7; 
out_7 <== 9 + out_6;
signal input out_7; 
signal input out_5; 
signal output out_0; 
out_0 <== out_7 * out_5;
}

component main = Multiplier();